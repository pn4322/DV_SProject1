{
    "contents" : "require(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(tidyr)\n\n# The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in \"Crosstabs, KPIs, Barchart.twb\"\n\n# These will be made to more resemble Tableau Parameters when we study Shiny.\nKPI_Low_Max_value = 0.05    \nKPI_Medium_Max_value = 0.14\n\n#Scatterplot \n\ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from DataSet\"')), httPHeader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); \nView(df)\n\n\n#Scatterplot plot\n\nggplot() + \n  coord_cartesian() + \n  scale_x_continuous() +\n  scale_y_continuous() +\n  labs(title='Wine Scatter Plot') +\n  labs(x=\"ALCOHOL\", y=paste(\"DENSITY\")) +\n  layer(data=df, \n        mapping=aes(x=ALCOHOL, y=DENSITY), \n        stat=\"identity\", \n        stat_params=list(color=\"blue\"), \n        geom=\"point\",\n        geom_params=list(color=\"blue\"), \n        #position=position_identity()\n        position=position_jitter(width=0.3, height=0)\n  )\n\n\n\n#Crosstab\n\ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select PH, QUALITY, sum_CITRIC_ACID, round(sum_RESIDUAL_SUGAR) as sum_residual_sugar, kpi as ratio, \n                                                case\n                                                when kpi < \"p1\" then \\\\\\'03 Low\\\\\\'\n                                                when kpi < \"p2\" then \\\\\\'02 Medium\\\\\\'\n                                                else \\\\\\'01 High\\\\\\'\n                                                end kpi\n                                                from (select PH, QUALITY, \n                                                sum(CITRIC_ACID) as sum_CITRIC_ACID, sum(RESIDUAL_SUGAR) as sum_RESIDUAL_SUGAR, \n                                                sum(CITRIC_ACID) / sum(RESIDUAL_SUGAR) as kpi\n                                                from dataset\n                                                group by PH, QUALITY)\n                                                order by QUALITY;\"\n                                                ')), httPHeader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)\n\n\n#Crosstab plot\n\nggplot() + \n  coord_cartesian() + \n  scale_x_discrete() +\n  scale_y_discrete() +\n  labs(title='Wine Crosstab\\nSUM_CITRIC_ACID, SUM_RESIDUAL_SUGAR, SUM_CITRIC_ACID / SUM_RESIDUAL_SUGAR') +\n  labs(x=paste(\"PH\"), y=paste(\"QUALITY\")) +\n  layer(data=df, \n        mapping=aes(x=round(PH,1), y=QUALITY, label=round(SUM_CITRIC_ACID, 2)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\"), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=PH, y=QUALITY, label=SUM_RESIDUAL_SUGAR), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", vjust=2), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=PH, y=QUALITY, label=round(RATIO, 2)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", vjust=4), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=PH, y=QUALITY, fill=KPI), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"tile\",\n        geom_params=list(alpha=0.5), \n        position=position_identity()\n  )\n\n#Bar chart\ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n                                                \"select QUALITY, PH, AVG_ALCOHOL, \n                                                avg(AVG_ALCOHOL) \n                                                OVER (PARTITION BY PH ) as window_AVG_ALCOHOL\n                                                from (select QUALITY, PH, avg(Alcohol) AVG_ALCOHOL\n                                                from dataset\n                                                group by QUALITY, PH)\n                                                order by PH;\"\n                                                ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)\n\n# df <- diamonds %>% group_by(QUALITY, PH) %>% summarize(AVG_ALCOHOL = mean(Alcohol)) %>% rename(QUALITY=QUALITY, PH=PH)\n# df1 <- df %>% ungroup %>% group_by(PH) %>% summarize(WINDOW_AVG_ALCOHOL=mean(AVG_ALCOHOL))\n# df <- inner_join(df, df1, by=\"PH\")\n\nspread(df, QUALITY, AVG_ALCOHOL) %>% View\n\nggplot() + \n  coord_cartesian() + \n  scale_x_discrete() +\n  scale_y_continuous() +\n  facet_wrap(~PH, ncol=1) +\n  labs(title='Diamonds Barchart\\nAVERAGE_Alcohol, WINDOW_AVG_ALCOHOL, ') +\n  labs(x=paste(\"QUALITY\"), y=paste(\"AVG_ALCOHOL\")) +\n  layer(data=df, \n        mapping=aes(x=QUALITY, y=AVG_ALCOHOL), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"bar\",\n        geom_params=list(colour=\"blue\"), \n        position=position_identity()\n  ) + coord_flip() +\n  layer(data=df, \n        mapping=aes(x=QUALITY, y=AVG_ALCOHOL, label=round(AVG_ALCOHOL)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-0.5), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=QUALITY, y=AVG_ALCOHOL, label=round(WINDOW_AVG_ALCOHOL)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-2), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=QUALITY, y=AVG_ALCOHOL, label=round(AVG_ALCOHOL - WINDOW_AVG_ALCOHOL)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-5), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(yintercept = WINDOW_AVG_ALCOHOL), \n        geom=\"hline\",\n        geom_params=list(colour=\"red\")\n  ) \n",
    "created" : 1447821608286.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2249304265",
    "id" : "B9276335",
    "lastKnownWriteTime" : 1447821678,
    "path" : "~/Desktop/Data Visualization/DV_SProject/02 Shiny/Visualizations.R",
    "project_path" : "Visualizations.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}