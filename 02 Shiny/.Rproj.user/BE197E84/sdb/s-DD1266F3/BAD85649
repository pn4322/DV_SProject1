{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\n\nshinyServer(function(input, output) {\n\n  output$distPlot <- renderPlot({\n  # Start your code here.\n\n  # The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in \"Crosstabs, KPIs, Barchart.twb\"\n      \n  KPI_Low_Max_value = input$KPI1     \n  KPI_Medium_Max_value = input$KPI2\n      \ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select PH, QUALITY, sum_CITRIC_ACID, round(sum_RESIDUAL_SUGAR) as sum_residual_sugar, kpi as ratio, \n                                                case\n                                                  when kpi < \"p1\" then \\\\\\'03 Low\\\\\\'\n                                                when kpi < \"p2\" then \\\\\\'02 Medium\\\\\\'\n                                                else \\\\\\'01 High\\\\\\'\n                                                end kpi\n                                                from (select PH, QUALITY, \n                                                sum(CITRIC_ACID) as sum_CITRIC_ACID, sum(RESIDUAL_SUGAR) as sum_RESIDUAL_SUGAR, \n                                                sum(CITRIC_ACID) / sum(RESIDUAL_SUGAR) as kpi\n                                                from dataset\n                                                group by PH, QUALITY)\n                                                order by QUALITY;\"\n                                                ')), httPHeader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); \n  \n  \n      \n  plot <- ggplot() + \n    coord_cartesian() + \n    scale_x_discrete() +\n    scale_y_discrete() +\n    labs(title='Wine Crosstab\\nSUM_CITRIC_ACID, SUM_RESIDUAL_SUGAR, SUM_CITRIC_ACID / SUM_RESIDUAL_SUGAR') +\n    labs(x=paste(\"PH\"), y=paste(\"QUALITY\")) +\n    layer(data=df, \n          mapping=aes(x=round(PH,1), y=QUALITY, label=round(SUM_CITRIC_ACID, 2)), \n          stat=\"identity\", \n          stat_params=list(), \n          geom=\"text\",\n          geom_params=list(colour=\"black\"), \n          position=position_identity()\n    ) +\n    layer(data=df, \n          mapping=aes(x=PH, y=QUALITY, label=SUM_RESIDUAL_SUGAR), \n          stat=\"identity\", \n          stat_params=list(), \n          geom=\"text\",\n          geom_params=list(colour=\"black\", vjust=2), \n          position=position_identity()\n    ) +\n    layer(data=df, \n          mapping=aes(x=PH, y=QUALITY, label=round(RATIO, 2)), \n          stat=\"identity\", \n          stat_params=list(), \n          geom=\"text\",\n          geom_params=list(colour=\"black\", vjust=4), \n          position=position_identity()\n    ) +\n    layer(data=df, \n          mapping=aes(x=PH, y=QUALITY, fill=KPI), \n          stat=\"identity\", \n          stat_params=list(), \n          geom=\"tile\",\n          geom_params=list(alpha=0.5), \n          position=position_identity()\n    )\n# End your code here.\nreturn(plot)\n  }) # output$distPlot\n  \n ##_________________ \n\noutput$distPlot <- renderPlot({\n  # Start your code here.\n  \n  # The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in \"Crosstabs, KPIs, Barchart.twb\"\n  \n  Lower_Limit = input$LowerLimit     \n  Upper_Limit = input$UpperLimit\n  \n  df <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from DataSet\"')), httPHeader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); \n  \n  plot <- ggplot() + \n    coord_cartesian() + \n    scale_x_continuous() +\n    scale_y_continuous() +\n    labs(title='Wine Scatter Plot') +\n    labs(x=\"ALCOHOL\", y=paste(\"DENSITY\")) +\n    layer(data=df, \n          mapping=aes(x=ALCOHOL, y=DENSITY), \n          stat=\"identity\", \n          stat_params=list(color=\"blue\"), \n          geom=\"point\",\n          geom_params=list(color=\"blue\"), \n          #position=position_identity()\n          position=position_jitter(width=0.3, height=0)\n    )\n  \n  \n  \n  # End your code here.\n  return(plot)\n}) # output$distPlot\n})\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1447822203548.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1229112470",
    "id" : "BAD85649",
    "lastKnownWriteTime" : 1447824813,
    "path" : "~/Desktop/Data Visualization/DV_SProject/02 Shiny/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}